{ config, pkgs, ... }:

{

  ### AUTO-GENERATED BY NIX-DARWIN INIT

  # You can update Home Manager without changing this value. See
  # the Home Manager release notes for a list of state version
  # changes in each release.
  home.stateVersion = "24.11";
  programs.home-manager.enable = true;

  ### OWN CONFIG

  home.packages = [
    pkgs.nix-search-cli
    pkgs.git
    pkgs.neovim
    pkgs.ripgrep
    pkgs.lazygit
    pkgs.tmux
    pkgs.wget
    pkgs.kubectl
    pkgs.istioctl
    pkgs.gh
    pkgs.k9s
    pkgs.kubernetes-helm
    pkgs.helmfile
    pkgs.colima
    pkgs.aws-vault
    pkgs.poetry
    pkgs.pre-commit
    pkgs.virtualenv
    pkgs.parallel
    pkgs.yq-go
    pkgs.docker-credential-helpers
    pkgs.docker
    pkgs.docker-buildx
    pkgs.kustomize
    pkgs.eks-node-viewer
    pkgs.copier
    pkgs.aerospace
    pkgs.jankyborders
    pkgs.bun
    # LANGUAGES
    pkgs.nodejs_22
    pkgs.go
    pkgs.terraform
    pkgs.python312
    pkgs.python312Packages.pip
    # LANGUAGE SERVERS
    pkgs.helm-ls
    pkgs.vscode-langservers-extracted
    pkgs.lua-language-server
    pkgs.gopls
    pkgs.terraform-ls
    pkgs.yaml-language-server
    pkgs.bash-language-server
    pkgs.nodePackages.typescript-language-server
    pkgs.nil
    pkgs.pyright
    # LINTERS
    pkgs.textlint
    pkgs.textlint-rule-write-good
    pkgs.textlint-rule-common-misspellings
    pkgs.tflint
    pkgs.golangci-lint
    pkgs.yamllint
    pkgs.eslint_d
    pkgs.actionlint
    pkgs.mypy
    # FORMATTERS
    pkgs.nixfmt-rfc-style
    pkgs.stylua
    pkgs.black
    pkgs.codespell
    pkgs.gofumpt
    pkgs.goimports-reviser
    pkgs.golines
    pkgs.shfmt
    pkgs.prettierd
    pkgs.isort
  ];

  programs.zsh.enable = true;
  programs.zsh.shellAliases = {
    tf = "terraform";
    tfws = "terraform workspace select";
    tffv = "terraform fmt --recursive && tf validate";
    python = "python3";
    k = "kubectl";
    kcvm = "kubectl config view --minify | grep current";
    kcuc = "kubectl config use-context";
    i = "istioctl";
    k9h = "k9s --headless";
    ghpr = "gh pr create --fill";
  };
  programs.zsh.initExtra = ''
    # SYSTEM PATH
    # Disables builtin Python.
    export PATH=$(echo $PATH | sed -r 's|/Library/Frameworks/Python.framework/Versions/3.11/bin:||')
    export PATH=$(echo $PATH | sed -r 's|/Library/Frameworks/Python.framework/Versions/3.10/bin:||')
    # FIXME: Prioritise Nix binaries over Homebrew, until it is removed all together.
    export PATH=$(echo $PATH | sed -r "s|(/opt/homebrew/bin)(:)(.*)|\3\2\1|")
    export PATH=$(echo $PATH | sed -r "s|(/opt/homebrew/sbin)(:)(.*)|\3\2\1|")
    export PATH="$PATH:$HOME/.config/scripts"

    export EDITOR="nvim"
    # ENVIRONMENT VARIABLES
    export PRETTIERD_DEFAULT_CONFIG="$HOME/.config/.prettierrc.json"
  '';
  programs.zsh.autosuggestion.enable = true;

  programs.git.aliases = {
    co = "checkout";
    st = "status";
  };

  programs.zsh.oh-my-zsh.enable = true;
  programs.zsh.oh-my-zsh.plugins = [ "git" ];
  programs.zsh.oh-my-zsh.theme = "agnoster";

  programs.starship.enable = true;
  programs.starship.enableZshIntegration = true;
}
